name: .NET Build & Deploy MultiCloud üèóÔ∏è üì¶

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: 'Restore dependencies üì¶'
      run: dotnet restore ./DockerDotNet.csproj

    - name: Build
      run: dotnet build ./DockerDotNet.csproj --no-restore

  docker-build:
    runs-on: 'ubuntu-latest'
    needs: build

    steps:

    - uses: actions/checkout@v3

    - name: Log in to registry
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.AzureAppService_ContainerUsername_be787e7656d846b5948d48b4759fbcd6 }}
        password: ${{ secrets.AzureAppService_ContainerPassword_813d0b298a3e4e1c8199b5fd0d691306 }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build and push container image to registry
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true        
        tags: ${{ secrets.AzureAppService_ContainerUsername_be787e7656d846b5948d48b4759fbcd6 }}/docker_dotnet6_app:latest
                
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  'DeployToAzure':
    runs-on: ubuntu-latest
    needs: docker-build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'dockerdotnet6app'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_d25a63a49dfc4f1086c7588a8f23af3d }}
        images: '${{ secrets.AzureAppService_ContainerUsername_be787e7656d846b5948d48b4759fbcd6 }}/docker_dotnet6_app:latest'
